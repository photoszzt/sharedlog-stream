package {{.PackageName}}

import (
	"encoding/json"
	"sharedlog-stream/pkg/commtypes"
)

type {{.TypeName}}JSONSerdeG struct {
	commtypes.DefaultJSONSerde
}

var _ = commtypes.SerdeG[*{{.TypeName}}]({{.TypeName}}JSONSerdeG{})

func (s {{.TypeName}}JSONSerdeG) Encode(value *{{.TypeName}}) ([]byte, *[]byte, error) {
	r, err := json.Marshal(value)
	return r, nil, err
}

func (s {{.TypeName}}JSONSerdeG) Decode(value []byte) (*{{.TypeName}}, error) {
	v := {{.TypeName}}{}
	if err := json.Unmarshal(value, &v); err != nil {
		return nil, err
	}
	return &v, nil
}

type {{.TypeName}}MsgpSerdeG struct {
	commtypes.DefaultMsgpSerde
}

var _ = commtypes.SerdeG[*{{.TypeName}}]({{.TypeName}}MsgpSerdeG{})

func (s {{.TypeName}}MsgpSerdeG) Encode(value *{{.TypeName}}) ([]byte, *[]byte, error) {
	b := commtypes.PopBuffer()
	buf := *b
	r, err := value.MarshalMsg(buf[:0])
	return r, b, err
}

func (s {{.TypeName}}MsgpSerdeG) Decode(value []byte) (*{{.TypeName}}, error) {
	v := {{.TypeName}}{}
	if _, err := v.UnmarshalMsg(value); err != nil {
		return nil, err
	}
	return &v, nil
}
